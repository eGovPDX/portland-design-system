name: Process Zeroheight Tokens

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'zeroheight-incoming/**'
  pull_request:
    types: [closed]

jobs:
  create-token-pr:
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config --global user.name 'Design Tokens Bot'
          git config --global user.email 'design-tokens-bot@portland.gov'

      - name: Create new branch
        id: create_branch
        run: |
          BRANCH_NAME="feat/update-zeroheight-tokens-$(date +%Y-%m-%d-%H%M%S)"
          git checkout -b $BRANCH_NAME
          echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1'
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Process Zeroheight tokens
        run: |
          node src/cli.js --source zeroheight --input zeroheight-incoming --output output

      - name: Commit and push changes
        id: commit_and_push
        run: |
          git add -f output/design_tokens.css output/design_tokens.json
          if git diff --staged --quiet; then
            echo "No changes to commit."
            echo "pushed=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected. Committing and pushing."
            git commit -m "feat: update tokens from Zeroheight"
            git push origin ${{ env.BRANCH_NAME }}
            echo "pushed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create Labels If They Don't Exist
        if: steps.commit_and_push.outputs.pushed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh label create "design-tokens" --description "Pull requests related to design tokens" --color "a2eeef" || echo "Label 'design-tokens' already exists"
          gh label create "automated" --description "Pull requests created by automation" --color "cfd3d7" || echo "Label 'automated' already exists"

      - name: Create Pull Request
        if: steps.commit_and_push.outputs.pushed == 'true'
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh pr create \
            --title "Feat: Update Design Tokens from Zeroheight" \
            --body "Automated update of design tokens from Zeroheight. This PR was created by a GitHub Action." \
            --base main \
            --head ${{ env.BRANCH_NAME }} \
            --label "design-tokens,automated"

  publish-to-npm:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'feat/update-zeroheight-tokens-')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Install pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 8

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18.19.1'
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Bump version and publish to NPM
        run: |
          pnpm version patch -m "chore: release new version %s"
          pnpm publish --no-git-checks
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          TAG_NAME=$(git describe --tags --abbrev=0)
          gh release create $TAG_NAME --title "Release $TAG_NAME" --notes "Automated release for version $TAG_NAME"

  cleanup:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'feat/update-zeroheight-tokens-')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Delete merged branch
        run: |
          BRANCH_TO_DELETE=${{ github.event.pull_request.head.ref }}
          git push origin --delete $BRANCH_TO_DELETE
